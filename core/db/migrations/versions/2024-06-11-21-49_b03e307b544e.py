"""added models from 5-11 files

Revision ID: b03e307b544e
Revises: 26f577d50bcb
Create Date: 2024-06-11 21:49:30.982294

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b03e307b544e'
down_revision = '26f577d50bcb'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asupr_data_with_dispatch_dso_center',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('short_address', sa.String(), nullable=False),
    sa.Column('full_address', sa.String(), nullable=False),
    sa.Column('area', sa.String(), nullable=False),
    sa.Column('unom', sa.BIGINT(), nullable=False),
    sa.Column('group', sa.String(), nullable=False),
    sa.Column('ods_number', sa.String(), nullable=True),
    sa.Column('ods_address', sa.String(), nullable=True),
    sa.Column('consumer', sa.String(), nullable=False),
    sa.Column('ctp', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_asupr_data_with_dispatch_dso_center_id'), 'asupr_data_with_dispatch_dso_center', ['id'], unique=False, schema='public')
    op.create_table('bti_unloading',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('administrative_district', sa.String(), nullable=False),
    sa.Column('municipal_district', sa.String(), nullable=False),
    sa.Column('locality', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('house_type', sa.String(), nullable=True),
    sa.Column('house_numbers', sa.BIGINT(), nullable=True),
    sa.Column('housing_numbers', sa.BIGINT(), nullable=True),
    sa.Column('building_type_number', sa.String(), nullable=True),
    sa.Column('building_number', sa.String(), nullable=True),
    sa.Column('unom', sa.BIGINT(), nullable=False),
    sa.Column('unad', sa.BIGINT(), nullable=True),
    sa.Column('building_material', sa.String(), nullable=True),
    sa.Column('building_assignment', sa.String(), nullable=True),
    sa.Column('building_class', sa.String(), nullable=True),
    sa.Column('building_type', sa.String(), nullable=True),
    sa.Column('building_floors_number', sa.BIGINT(), nullable=True),
    sa.Column('building_attribute', sa.String(), nullable=True),
    sa.Column('building_total_area', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_bti_unloading_id'), 'bti_unloading', ['id'], unique=False, schema='public')
    op.create_table('incidents',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('external_system_creation_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('closed_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('area', sa.String(), nullable=False),
    sa.Column('unom', sa.BIGINT(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('external_system_closed_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_incidents_id'), 'incidents', ['id'], unique=False, schema='public')
    op.create_table('moek_wiring_diagrams',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('tp_number', sa.String(), nullable=False),
    sa.Column('address_tp', sa.String(), nullable=False),
    sa.Column('tp_type', sa.String(), nullable=False),
    sa.Column('placement_type', sa.String(), nullable=False),
    sa.Column('administrative_district', sa.String(), nullable=False),
    sa.Column('commissioning_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('balance_holder', sa.String(), nullable=False),
    sa.Column('building_street', sa.String(), nullable=False),
    sa.Column('heat_load_average', sa.String(), nullable=False),
    sa.Column('heat_load_fact', sa.String(), nullable=False),
    sa.Column('building_heat_load', sa.String(), nullable=False),
    sa.Column('is_dispatching', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_moek_wiring_diagrams_id'), 'moek_wiring_diagrams', ['id'], unique=False, schema='public')
    op.create_table('planned_unplanned_shutdowns',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('cause', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('registration_disconnection_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('planned_shutdown_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('planned_switch_on_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('actual_shutdown_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('actual_switch_on_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('shutdown_type', sa.String(), nullable=False),
    sa.Column('unom', sa.BIGINT(), nullable=False),
    sa.Column('address', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_planned_unplanned_shutdowns_id'), 'planned_unplanned_shutdowns', ['id'], unique=False, schema='public')
    op.create_table('unloading_odpu_heating',
    sa.Column('id_uu', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('id_tu', sa.BIGINT(), nullable=False),
    sa.Column('area', sa.String(), nullable=False),
    sa.Column('district', sa.String(), nullable=False),
    sa.Column('consumer', sa.String(), nullable=False),
    sa.Column('group', sa.String(), nullable=False),
    sa.Column('unom', sa.BIGINT(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('central_heating', sa.String(), nullable=True),
    sa.Column('meter_brand', sa.String(), nullable=False),
    sa.Column('series_number_meter', sa.BIGINT(), nullable=False),
    sa.Column('month_year', sa.String(), nullable=True),
    sa.Column('day_month_year', sa.String(), nullable=True),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('heat_supply_volume', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('heat_reverse_supply_volume', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('backflow_difference', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('leakage_difference', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('supply_temperature', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('return_temperature', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('counter_hours', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('heat_energy_consumption', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('errors', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id_uu'),
    schema='public'
    )
    op.create_index(op.f('ix_public_unloading_odpu_heating_id_uu'), 'unloading_odpu_heating', ['id_uu'], unique=False, schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_public_unloading_odpu_heating_id_uu'), table_name='unloading_odpu_heating', schema='public')
    op.drop_table('unloading_odpu_heating', schema='public')
    op.drop_index(op.f('ix_public_planned_unplanned_shutdowns_id'), table_name='planned_unplanned_shutdowns', schema='public')
    op.drop_table('planned_unplanned_shutdowns', schema='public')
    op.drop_index(op.f('ix_public_moek_wiring_diagrams_id'), table_name='moek_wiring_diagrams', schema='public')
    op.drop_table('moek_wiring_diagrams', schema='public')
    op.drop_index(op.f('ix_public_incidents_id'), table_name='incidents', schema='public')
    op.drop_table('incidents', schema='public')
    op.drop_index(op.f('ix_public_bti_unloading_id'), table_name='bti_unloading', schema='public')
    op.drop_table('bti_unloading', schema='public')
    op.drop_index(op.f('ix_public_asupr_data_with_dispatch_dso_center_id'), table_name='asupr_data_with_dispatch_dso_center', schema='public')
    op.drop_table('asupr_data_with_dispatch_dso_center', schema='public')
    # ### end Alembic commands ###
